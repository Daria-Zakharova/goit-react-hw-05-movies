{"version":3,"file":"static/js/568.9fdfcc29.chunk.js","mappings":"sLAEaA,E,QAASC,EAAAA,GAAH,omC,uCCENC,EAAY,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACjBC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,SAACL,EAAD,UACKG,EAAOG,KAAI,YAA0C,IAAxCC,EAAuC,EAAvCA,GAAIC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,SAE7BC,EADO,IAAIC,KAAKH,GACJI,cAClB,OACI,2BACI,SAAC,MAAD,CAAiBC,UAAWJ,EAAW,iBAAmB,qBAAsBK,KAAK,UACrF,iBAAKD,UAAU,kBAAf,WACI,UAAC,KAAD,CAAME,GAAE,kBAAaT,GAAMU,MAAO,CAAEC,KAAMd,GAA1C,cAAwDI,EAAxD,IAAgEC,GAAgB,KAAOE,KACtFD,IAAY,uBAAIA,SAJdH,EASlB,KAGZ,C,sJCrBc,SAASY,IACpB,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KASA,OAPAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,0FAChBF,EADgB,UACQG,EAAAA,EAAAA,IAAU,CAACC,YAAa,aADhC,8BAC+CC,KAAKC,QADpD,6EAAH,qDAGjBJ,GACH,GAAE,KAGH,iCACI,eAAIK,MAAO,CAACC,YAAa,QAASC,aAAc,GAAhD,8BACA,SAAC,IAAD,CAAW5B,OAAUkB,MAE5B,C,8ICjBKW,EAAW,+BACXC,EAAU,mCACHC,EAAa,mCAGbT,EAAY,SAAC,GAAsD,IAAD,IAApDC,YAAAA,OAAoD,MAAtC,WAAsC,MAA1BS,MAAAA,OAA0B,MAAlB,GAAkB,MAAdC,KAAAA,OAAc,MAAP,EAAO,EACvEC,EAAO,GACX,OAAQX,GACJ,IAAK,WAED,OADAW,EAAO,qBACAC,EAAAA,EAAAA,IAAA,UAAaN,EAAb,YAAyBK,EAAzB,oBAAyCJ,EAAzC,iBAAyDG,IACpE,IAAK,SAED,OADAC,EAAO,gBACAC,EAAAA,EAAAA,IAAA,UAAaN,EAAb,YAAyBK,EAAzB,oBAAyCJ,EAAzC,kBAA0DE,EAA1D,iBAAwEC,IAK1F,EAEYG,EAAe,SAAAhC,GACxB,IAAM8B,EAAI,iBAAa9B,GACvB,OAAQ+B,EAAAA,EAAAA,IAAA,UAAaN,EAAb,YAAyBK,EAAzB,oBAAyCJ,GACpD,EAEYO,EAAkB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,KAAMlC,EAAQ,EAARA,GAC/B8B,EAAO,GACX,OAAQI,GACJ,IAAK,OACFJ,EAAI,iBAAa9B,EAAb,YACJ,MACH,IAAK,UACD8B,EAAI,gBAAY9B,EAAZ,YACJ,MACJ,QACI,MAAM,IAAImC,MAAM,qDAGxB,OAAOJ,EAAAA,EAAAA,IAAA,UAAaN,EAAb,YAAyBK,EAAzB,oBAAyCJ,GACnD,C","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","pages/home.js","utils/fetch-movies.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Movies = styled.ul`\n    padding: 40px 100px;\n    line-height: 1.5;\n    width: fit-content;\n    \n    li {\n        position: relative;\n        display: flex;\n        gap: 5px 10px;\n        margin-bottom: 10px;\n\n        svg {\n            position: absolute;\n            top: 2px;\n        }\n\n        .disabled-info-icon {\n            opacity: .2;\n        }\n        .show-info-icon {\n            transition: transform 100ms linear;\n        }\n\n        .show-info-icon:hover {\n            transform: rotate(90deg);\n\n            &~div p {\n                display: block;\n                padding: 20px;\n                font-size: 16px;\n                background-color: #ddd;\n            }\n        }\n\n        .movie-item-wrap {\n           padding-left: 40px;\n           max-width: 600px;\n\n            a {                \n                transition: text-decoration 200ms linear;\n                \n                &:hover {\n                    text-decoration: underline;\n                } \n            }\n\n            p {\n                display: none;\n            }\n        }\n    }`;\n","import { Movies} from \"./MovieList.styled\";\nimport {IoIosPlayCircle} from \"react-icons/io\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nexport const MovieList = ({movies}) => {\n    const location = useLocation();\n\n    return (\n        <Movies>\n            {movies.map(({id, title, release_date, overview}) => {\n                const date = new Date(release_date);\n                const year = date.getFullYear();\n                return (\n                    <li key = {id}>\n                        <IoIosPlayCircle className={overview ? \"show-info-icon\" : \"disabled-info-icon\"} size=\"30px\"/> \n                        <div className=\"movie-item-wrap\">\n                            <Link to={`/movies/${id}`} state={{ from: location }}> {title} {release_date && \"- \" + year}</Link>\n                            {overview && <p>{overview}</p>}\n                        </div>\n                        \n                    </li>\n                )\n            })}\n        </Movies>\n    );\n}","import { getMovies } from \"utils/fetch-movies\";\nimport { MovieList } from \"components/MovieList/MovieList\";\nimport { useEffect, useState } from \"react\";\n\nexport default function Home () {\n    const [trending, setTrending] = useState([]);\n\n    useEffect(() => {\n        const getTrending = async () => {\n            setTrending(await(await getMovies({requestType: 'trending' })).data.results);\n        }\n        getTrending();\n    }, []);\n    \n    return (\n    <>\n        <h1 style={{paddingLeft: '100px', marginBottom: 0}}>Trending today:</h1>\n        <MovieList movies = {trending}/>        \n    </>);\n};\n\n","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '8cb2067df7427c657a5f093d2a8e51ae';\nexport const baseImgUrl = 'https://image.tmdb.org/t/p/w500/';\n\n\nexport const getMovies = ({requestType = 'trending', query = '', page = 1}) => {\n    let path = '';\n    switch (requestType) {\n        case 'trending':\n            path = 'trending/movie/day';\n            return axios.get(`${BASE_URL}/${path}?api_key=${API_KEY}&page=${page}`);\n        case 'search': \n            path = '/search/movie';\n            return axios.get(`${BASE_URL}/${path}?api_key=${API_KEY}&query=${query}&page=${page}`);\n        default:\n            break;\n    }\n   \n}\n\nexport const getMovieById = id => {\n    const path = `/movie/${id}`;\n    return  axios.get(`${BASE_URL}/${path}?api_key=${API_KEY}`);\n}\n\nexport const getMovieDetails = ({type, id}) => {\n    let path = '';\n    switch (type) {\n        case 'cast':\n           path = `/movie/${id}/credits`;\n           break;\n        case 'reviews':\n            path = `movie/${id}/reviews`;\n            break;\n        default:\n            throw new Error('Invalid details type meaning in get movie details'); \n    }\n    \n    return axios.get(`${BASE_URL}/${path}?api_key=${API_KEY}`);\n}\n"],"names":["Movies","styled","MovieList","movies","location","useLocation","map","id","title","release_date","overview","year","Date","getFullYear","className","size","to","state","from","Home","useState","trending","setTrending","useEffect","getTrending","getMovies","requestType","data","results","style","paddingLeft","marginBottom","BASE_URL","API_KEY","baseImgUrl","query","page","path","axios","getMovieById","getMovieDetails","type","Error"],"sourceRoot":""}
{"version":3,"file":"static/js/239.80c88212.chunk.js","mappings":"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","sources":["components/BackBtn/BackBtn.styled.js","components/BackBtn/BackBtn.js","components/Movie/Movie.styled.js","components/Movie/Movie.js","components/MovieDetails/MovieDetailes.styled.js","components/MovieDetails/MovieDetails.js","pages/movie-page.js","utils/fetch-movies.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\nexport const BackLink = styled(Link)`\n    display: block;\n    width: fit-content;\n    margin: 40px 100px 0;\n    padding: 10px;\n    border: 2px solid #000;\n    border-radius: 5px;\n    background-color: #d2d2d2;\n\n    &:hover, &:focus {\n        background-color: #f0f0f0;\n    }\n`;","import { BackLink } from \"./BackBtn.styled\"\n\nexport const BackBtn = ({location}) => {\n    return <BackLink to = {location}> &#129044; Back </BackLink>\n}","import styled from \"@emotion/styled\";\n\nexport const MovieInfo = styled.section`\n    display: flex;\n    padding: 40px 100px;\n    gap: 40px;\n    border-bottom: solid 2px #000; \n\n    div:first-of-type {\n        width: 510px;\n    }\n    \n    img {\n        min-width: 500px;\n    }    \n    `;","import { MovieInfo } from \"./Movie.styled\";\nimport { baseImgUrl } from \"utils/fetch-movies\";\n\nexport const Movie = ({imgUrl, movieTitle, rating, overview, genres, id}) => {\n\n    const posterPlaceholderUrl = 'https://mbfn.org/wp-content/uploads/2020/09/image-coming-soon-placeholder.png';\n    return (\n        <MovieInfo>\n            <div><img src={imgUrl ? (baseImgUrl + imgUrl) : posterPlaceholderUrl} alt={movieTitle}/></div>\n            <div>\n                <h1>{movieTitle}</h1>\n                <p className=\"rating\"><b>User score:</b> {rating}</p>\n                <h2>Overview</h2>\n                <p className=\"overview\">{overview}</p>\n                {genres && \n                    <>\n                    <h2>Genres</h2>\n                    <p className=\"genres\">{genres}</p>\n                    </>\n                }\n\n            </div>\n        </MovieInfo>\n    )\n}","import styled from \"@emotion/styled\";\n\nexport const MovieDetailed = styled.div`\n    padding: 40px 0 0;\n\n    .details-title {\n        margin: 0 0 40px 100px;\n        font-weight: 700;\n    }\n\n    .details-list {\n        list-style: disc;\n        list-style-position: inside;\n        padding: 0 100px 40px;\n        border-bottom: 2px solid #000;\n\n        a:hover {\n            text-decoration: underline;\n        }\n    }\n`;","import { Suspense } from \"react\";\nimport { lazy } from \"react\";\nimport { Link, Outlet } from \"react-router-dom\";\nimport { PulseLoader } from \"react-spinners\";\nimport { MovieDetailed } from \"./MovieDetailes.styled\";\n\nconst Cast = lazy(() => import(\"../Cast/Cast\"));\nconst Reviews = lazy(() => import(\"../Reviews/Reviews\"));\n\nexport const MovieDetails = () => {  \n\n    return (\n        <MovieDetailed>\n            <p className=\"details-title\">Additional information:</p>\n            <ul className=\"details-list\">\n                <li><Link to=\"cast\" element={<Cast/>}>Cast</Link></li>\n                <li><Link to=\"reviews\" element={<Reviews/>}>Reviews</Link></li>\n            </ul>\n            <Suspense fallback = {<div>Loading...<PulseLoader color=\"#b4b4b4\"\n            margin={10}\n            size={10}\n            speedMultiplier={0.7}/></div>}>\n                <Outlet/>\n            </Suspense>\n        </MovieDetailed>\n    );\n}","import { useEffect, useState } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { BackBtn } from \"components/BackBtn/BackBtn\";\nimport { Movie } from \"components/Movie/Movie\";\nimport { MovieDetails } from \"components/MovieDetails/MovieDetails\";\nimport { getMovieById } from \"utils/fetch-movies\";\nimport PageNotFound from \"./404\";\n\nexport default function MoviePage () {\n    const location = useLocation();\n    const [img, setImg] = useState('');\n    const [title, setTitle] = useState('');\n    const [rating, setRating] = useState(0);\n    const [genres, setGenres] = useState([]);\n    const [overview, setOverview] = useState('');\n    const [backUrl, setBackUrl] = useState('');\n    const [success, setSuccess] = useState();\n\n    const {id} = useParams();\n\n    useEffect(() => {\n        location.state && setBackUrl(() => location.state.from);\n    }, [location]);\n\n    useEffect(() => {\n        const getMovieInfo = async() => {\n            try {\n                const {'poster_path': img, title, vote_average: rating, genres, overview} = await(await(getMovieById(id))).data;\n                setSuccess(true);\n                setImg(img);\n                setTitle(title);\n                setRating((rating * 10).toFixed() + '%');\n                setOverview(overview);\n                setGenres(() => genres.map((item, idx) => idx === 0 ? item.name: item.name.toLowerCase()).join(', '));\n            }\n            catch {\n                setSuccess(false)\n            }\n           \n        }\n        getMovieInfo();\n    }, [id]);\n\n    return (\n            <>  {success === false && <PageNotFound/>}       \n                {success === true && (<>\n                    <BackBtn location={backUrl || '/movies'}/>    \n                <Movie imgUrl={img} movieTitle={title} rating={rating} overview={overview} genres={genres}/>\n                <MovieDetails/></>)}\n            </>\n        )\n}","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '8cb2067df7427c657a5f093d2a8e51ae';\nexport const baseImgUrl = 'https://image.tmdb.org/t/p/w500/';\n\n\nexport const getMovies = ({requestType = 'trending', query = '', page = 1}) => {\n    let path = '';\n    switch (requestType) {\n        case 'trending':\n            path = 'trending/movie/day';\n            return axios.get(`${BASE_URL}/${path}?api_key=${API_KEY}&page=${page}`);\n        case 'search': \n            path = '/search/movie';\n            return axios.get(`${BASE_URL}/${path}?api_key=${API_KEY}&query=${query}&page=${page}`);\n        default:\n            break;\n    }\n   \n}\n\nexport const getMovieById = id => {\n    const path = `/movie/${id}`;\n    return  axios.get(`${BASE_URL}/${path}?api_key=${API_KEY}`);\n}\n\nexport const getMovieDetails = ({type, id}) => {\n    let path = '';\n    switch (type) {\n        case 'cast':\n           path = `/movie/${id}/credits`;\n           break;\n        case 'reviews':\n            path = `movie/${id}/reviews`;\n            break;\n        default:\n            throw new Error('Invalid details type meaning in get movie details'); \n    }\n    \n    return axios.get(`${BASE_URL}/${path}?api_key=${API_KEY}`);\n}\n"],"names":["BackLink","styled","Link","BackBtn","location","to","MovieInfo","Movie","imgUrl","movieTitle","rating","overview","genres","id","src","baseImgUrl","alt","className","MovieDetailed","Cast","lazy","Reviews","MovieDetails","element","Suspense","fallback","PulseLoader","color","margin","size","speedMultiplier","MoviePage","useLocation","useState","img","setImg","title","setTitle","setRating","setGenres","setOverview","backUrl","setBackUrl","success","setSuccess","useParams","useEffect","state","from","getMovieInfo","getMovieById","data","vote_average","toFixed","map","item","idx","name","toLowerCase","join","BASE_URL","API_KEY","getMovies","requestType","query","page","path","axios","getMovieDetails","type","Error"],"sourceRoot":""}
{"version":3,"file":"static/js/568.befea5f1.chunk.js","mappings":"sLAEaA,E,QAASC,EAAAA,GAAH,48D,iDCGNC,EAAY,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEjBC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,SAACL,EAAD,UACKG,EAAOG,KAAI,YAAkE,IAAhEC,EAA+D,EAA/DA,GAAIC,EAA2D,EAA3DA,MAAOC,EAAoD,EAApDA,aAAcC,EAAsC,EAAtCA,SAAuBC,EAAe,EAA5BC,YAEvCC,EADO,IAAIC,KAAKL,GACJM,cACZC,EAASC,EAAAA,GAAaN,EAC5B,OACI,2BACI,SAAC,MAAD,CAAeO,UAAWR,EAAW,iBAAmB,qBAAsBS,KAAK,UACnF,iBAAKD,UAAU,kBAAf,WACI,UAAC,KAAD,CAAME,GAAE,kBAAab,GAAMc,MAAO,CAAEC,KAAMlB,GAA1C,WACA,gBAAKc,UAAU,SAASK,IAAKZ,EAAYK,EAdpC,gFAcmEQ,IAAG,qBAAgBhB,MAC1F,kBAAMU,UAAU,QAAhB,UAAyBV,EAAzB,IAAiCC,GAAgB,MAAQI,QACzDH,IAAY,uBAAIA,SANdH,EAWlB,KAGZ,C,sJC1Bc,SAASkB,IACpB,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KASA,OAPAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,0FAChBF,EADgB,UACQG,EAAAA,EAAAA,IAAU,CAACC,YAAa,aADhC,8BAC+CC,KAAKC,QADpD,6EAAH,qDAGjBJ,GACH,GAAE,KAGH,iCACI,eAAIK,MAAO,CAACC,aAAc,QAA1B,8BACA,SAAC,IAAD,CAAWjC,OAAUwB,MAE5B,C,8ICjBKU,EAAW,+BACXC,EAAU,mCACHrB,EAAa,mCAGbc,EAAY,SAAC,GAAsD,IAAD,IAApDC,YAAAA,OAAoD,MAAtC,WAAsC,MAA1BO,MAAAA,OAA0B,MAAlB,GAAkB,MAAdC,KAAAA,OAAc,MAAP,EAAO,EACvEC,EAAO,GACX,OAAQT,GACJ,IAAK,WAED,OADAS,EAAO,qBACAC,EAAAA,EAAAA,IAAA,UAAaL,EAAb,YAAyBI,EAAzB,oBAAyCH,EAAzC,iBAAyDE,IACpE,IAAK,SAED,OADAC,EAAO,gBACAC,EAAAA,EAAAA,IAAA,UAAaL,EAAb,YAAyBI,EAAzB,oBAAyCH,EAAzC,kBAA0DC,EAA1D,iBAAwEC,IAK1F,EAEYG,EAAe,SAAApC,GACxB,IAAMkC,EAAI,iBAAalC,GACvB,OAAQmC,EAAAA,EAAAA,IAAA,UAAaL,EAAb,YAAyBI,EAAzB,oBAAyCH,GACpD,EAEYM,EAAkB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,KAAMtC,EAAQ,EAARA,GAC/BkC,EAAO,GACX,OAAQI,GACJ,IAAK,OACFJ,EAAI,iBAAalC,EAAb,YACJ,MACH,IAAK,UACDkC,EAAI,gBAAYlC,EAAZ,YACJ,MACJ,QACI,MAAM,IAAIuC,MAAM,qDAGxB,OAAOJ,EAAAA,EAAAA,IAAA,UAAaL,EAAb,YAAyBI,EAAzB,oBAAyCH,GACnD,C","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","pages/home.js","utils/fetch-movies.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Movies = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 40px;\n    justify-content: center;\n    line-height: 1.5;\n    \n    li {\n        flex-basis: calc((100% - 120px)/4);\n        max-width: 500px;\n        position: relative;\n        display: flex;\n        gap: 5px 10px;\n        margin-bottom: 10px;\n        box-shadow: 0px 1px 2px #444;\n        overflow: hidden;\n\n        svg {\n            position: absolute;\n            z-index: 4;\n            bottom: 20px;\n            right: 10px;\n            stroke: currentColor;\n            color: #000;\n        }\n\n        .disabled-info-icon {\n            opacity: 0;\n        }\n        .show-info-icon {\n            transition: transform 100ms linear;\n        }\n\n        .show-info-icon:hover {\n            color: #fff;\n\n            &~div p {\n                transform: translateY(-100%);\n                z-index: 2;\n            }\n        }\n\n        .movie-item-wrap {\n           max-width: 600px;\n\n           .poster {\n            aspect-ratio: .67;\n            object-fit: contain;\n            filter: grayscale(.9);\n            transition: filter 350ms linear;\n           }\n\n            .title { \n                display: block;       \n                padding: 10px 40px 20px 20px;\n                transition: text-decoration 200ms linear;\n            }\n\n            p {\n                position: absolute;\n                top: 100%;\n                display: block;\n                padding: 20px;\n                padding-right: 40px;\n                font-size: 18px;\n                box-shadow: 1px 1px 2px #444;\n                background-color: #aaa;\n                \n                transform: translateY(100%);\n                transition: transform 350ms linear;\n            }\n\n            a:hover .title{\n                text-decoration: underline;\n            }\n            a:hover .poster{\n                filter: none;\n            }\n        }\n    }`;\n","import { Movies} from \"./MovieList.styled\";\nimport {AiOutlineRead} from \"react-icons/ai\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport {baseImgUrl} from \"../../utils/fetch-movies\"\n\nexport const MovieList = ({movies}) => {\n    const posterPlaceholderUrl = 'https://mbfn.org/wp-content/uploads/2020/09/image-coming-soon-placeholder.png';\n    const location = useLocation();\n\n    return (\n        <Movies>\n            {movies.map(({id, title, release_date, overview, poster_path: posterUrl}) => {\n                const date = new Date(release_date);\n                const year = date.getFullYear();\n                const imgUrl = baseImgUrl + posterUrl;\n                return (\n                    <li key = {id}>\n                        <AiOutlineRead className={overview ? \"show-info-icon\" : \"disabled-info-icon\"} size=\"30px\"/> \n                        <div className=\"movie-item-wrap\">\n                            <Link to={`/movies/${id}`} state={{ from: location }}>\n                            <img className=\"poster\" src={posterUrl ? imgUrl : posterPlaceholderUrl} alt={`poster for ${title}`}/>\n                             <span className=\"title\">{title} {release_date && \" - \" + year}</span></Link>\n                            {overview && <p>{overview}</p>}\n                        </div>\n                        \n                    </li>\n                )\n            })}\n        </Movies>\n    );\n}","import { getMovies } from \"utils/fetch-movies\";\nimport { MovieList } from \"components/MovieList/MovieList\";\nimport { useEffect, useState } from \"react\";\n\nexport default function Home () {\n    const [trending, setTrending] = useState([]);\n\n    useEffect(() => {\n        const getTrending = async () => {\n            setTrending(await(await getMovies({requestType: 'trending' })).data.results);\n        }\n        getTrending();\n    }, []);\n    \n    return (\n    <>\n        <h1 style={{marginBottom: '40px',}}>Trending today:</h1>\n        <MovieList movies = {trending}/>        \n    </>);\n};\n\n","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '8cb2067df7427c657a5f093d2a8e51ae';\nexport const baseImgUrl = 'https://image.tmdb.org/t/p/w500/';\n\n\nexport const getMovies = ({requestType = 'trending', query = '', page = 1}) => {\n    let path = '';\n    switch (requestType) {\n        case 'trending':\n            path = 'trending/movie/day';\n            return axios.get(`${BASE_URL}/${path}?api_key=${API_KEY}&page=${page}`);\n        case 'search': \n            path = '/search/movie';\n            return axios.get(`${BASE_URL}/${path}?api_key=${API_KEY}&query=${query}&page=${page}`);\n        default:\n            break;\n    }\n   \n}\n\nexport const getMovieById = id => {\n    const path = `/movie/${id}`;\n    return  axios.get(`${BASE_URL}/${path}?api_key=${API_KEY}`);\n}\n\nexport const getMovieDetails = ({type, id}) => {\n    let path = '';\n    switch (type) {\n        case 'cast':\n           path = `/movie/${id}/credits`;\n           break;\n        case 'reviews':\n            path = `movie/${id}/reviews`;\n            break;\n        default:\n            throw new Error('Invalid details type meaning in get movie details'); \n    }\n    \n    return axios.get(`${BASE_URL}/${path}?api_key=${API_KEY}`);\n}\n"],"names":["Movies","styled","MovieList","movies","location","useLocation","map","id","title","release_date","overview","posterUrl","poster_path","year","Date","getFullYear","imgUrl","baseImgUrl","className","size","to","state","from","src","alt","Home","useState","trending","setTrending","useEffect","getTrending","getMovies","requestType","data","results","style","marginBottom","BASE_URL","API_KEY","query","page","path","axios","getMovieById","getMovieDetails","type","Error"],"sourceRoot":""}
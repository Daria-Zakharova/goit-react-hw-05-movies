{"version":3,"file":"static/js/795.326645df.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","components/NoDataMsg/NoDataMsg,styled.js","components/NoDataMsg/NoDataMsg.js","components/MovieSearch/MovieSearch.styled.js","components/MovieSearch/MovieSearch.js","pages/movies.js","utils/fetch-movies.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Movies = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 40px;\n    justify-content: center;\n    line-height: 1.5;\n    \n    li {\n        flex-basis: calc((100% - 120px)/4);\n        max-width: 500px;\n        position: relative;\n        display: flex;\n        gap: 5px 10px;\n        margin-bottom: 10px;\n        box-shadow: 0px 1px 2px #444;\n        overflow: hidden;\n\n        svg {\n            position: absolute;\n            z-index: 4;\n            bottom: 20px;\n            right: 10px;\n            stroke: currentColor;\n            color: #000;\n        }\n\n        .disabled-info-icon {\n            opacity: 0;\n        }\n        .show-info-icon {\n            transition: transform 100ms linear;\n        }\n\n        .show-info-icon:hover {\n            color: #fff;\n\n            &~div p {\n                transform: translateY(-100%);\n                z-index: 2;\n            }\n        }\n\n        .movie-item-wrap {\n           max-width: 600px;\n\n           .poster {\n            aspect-ratio: .67;\n            object-fit: contain;\n            filter: grayscale(.9);\n            transition: filter 350ms linear;\n           }\n\n            .title { \n                display: block;       \n                padding: 10px 40px 20px 20px;\n                transition: text-decoration 200ms linear;\n            }\n\n            p {\n                position: absolute;\n                top: 100%;\n                display: block;\n                padding: 20px;\n                padding-right: 40px;\n                font-size: 18px;\n                box-shadow: 1px 1px 2px #444;\n                background-color: #aaa;\n                \n                transform: translateY(100%);\n                transition: transform 350ms linear;\n            }\n\n            a:hover .title{\n                text-decoration: underline;\n            }\n            a:hover .poster{\n                filter: none;\n            }\n        }\n    }`;\n","import { Movies} from \"./MovieList.styled\";\nimport {AiOutlineRead} from \"react-icons/ai\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport {baseImgUrl} from \"../../utils/fetch-movies\"\n\nexport const MovieList = ({movies}) => {\n    const posterPlaceholderUrl = 'https://mbfn.org/wp-content/uploads/2020/09/image-coming-soon-placeholder.png';\n    const location = useLocation();\n\n    return (\n        <Movies>\n            {movies.map(({id, title, release_date, overview, poster_path: posterUrl}) => {\n                const date = new Date(release_date);\n                const year = date.getFullYear();\n                const imgUrl = baseImgUrl + posterUrl;\n                return (\n                    <li key = {id}>\n                        <AiOutlineRead className={overview ? \"show-info-icon\" : \"disabled-info-icon\"} size=\"30px\"/> \n                        <div className=\"movie-item-wrap\">\n                            <Link to={`/movies/${id}`} state={{ from: location }}>\n                            <img className=\"poster\" src={posterUrl ? imgUrl : posterPlaceholderUrl} alt={`poster for ${title}`}/>\n                             <span className=\"title\">{title} {release_date && \" - \" + year}</span></Link>\n                            {overview && <p>{overview}</p>}\n                        </div>\n                        \n                    </li>\n                )\n            })}\n        </Movies>\n    );\n}","import styled from \"@emotion/styled\";\n\nexport const Msg = styled.div`\n    margin-top: ${({margin}) => margin ? '40px': 0};\n    font-size: 20px;\n`;","import { Msg } from \"./NoDataMsg,styled\"\n\nexport const NoDataMsg = ({message, margin = false}) => {\n    return (\n        <Msg margin={margin}>{message}</Msg>\n    )\n}","import styled from \"@emotion/styled\";\n\nexport const SearchForm = styled.form`\n    display: flex;\n    justify-content: center;\n    margin-bottom: 40px;\n\n    input{\n        padding: 5px;\n        font-size: inherit;\n        border: solid 2px black;\n    }\n\n    button {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        border-radius: 0px;\n        border-left: none;\n        background-color: #d2d2d2;\n\n    &:hover, &:focus {\n        background-color: #f0f0f0;\n    }\n    }\n`;","import { SearchForm } from \"./MovieSearch.styled\";\nimport {CgSearch} from \"react-icons/cg\"\nimport { useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\n\nexport const MovieSearch = ({onSubmit}) => {\n    const [searchParams] = useSearchParams();\n    const title = searchParams.get('title') ?? '';\n    const [query, setQuery] = useState(title);\n    return (\n        <SearchForm onSubmit = {onSubmit}>\n            <input name=\"search\" type='text' value = {query} onChange = {(e) => setQuery(e.target.value)}/>\n            <button><CgSearch size = \"20\"/></button>\n        </SearchForm>\n    )\n};","import { useEffect, useState } from \"react\";\nimport { Outlet, useSearchParams } from \"react-router-dom\";\nimport { getMovies } from \"utils/fetch-movies\";\nimport { MovieList } from \"components/MovieList/MovieList\";\nimport { MovieSearch } from \"components/MovieSearch/MovieSearch\";\nimport { NoDataMsg } from \"components/NoDataMsg/NoDataMsg\";\n\nexport default function Movies () {\n    const [movies, setMovies] = useState([]);\n    const [query, setQuery] = useState('');\n    const [page, setPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(1);\n\n    const [searchParams, setSearchParams] = useSearchParams('');    \n\n    useEffect(() => {\n        const title = searchParams.get('title') ?? '';\n        title && setQuery(title);\n    }, [searchParams]);\n\n    // infifnite scroll\n    useEffect(() => {\n        const options = {\n            root: null,\n            rootMargin: '40%',\n            treshhold: 0,\n        };\n\n        const observer = new IntersectionObserver(() => {\n            setPage(page => page + 1)\n        }, options);\n        const guard = document.querySelector('.guard');\n        guard && observer.observe(guard);\n    }, [totalPages]);\n\n    // set total pages\n    useEffect(() => {\n        const getTotalPages = async () => {\n            const pages = await(await getMovies('search', query)).data.total_pages;\n            setTotalPages(pages);\n        };\n\n        query && getTotalPages();\n        \n    }, [query]);\n\n    // render movies\n    useEffect(() => {\n        const findMovies = async () => {\n            if (page) {\n                const newMovies = await(await getMovies({requestType: 'search', query, page})).data.results;\n                setMovies(movies => [...movies, ...newMovies]); \n            }\n            return;\n        }\n        query && findMovies();\n    }, [query, page]);\n\n    const onSearch = e => {\n        e.preventDefault();\n        const queryStr = e.target.elements.search.value.toLowerCase().trim();\n        if (queryStr === query) {\n          return;}\n        setPage(1);\n        setMovies([]);\n        setQuery(queryStr);\n        queryStr && setSearchParams({title: queryStr});\n    }\n\n    return (\n        <>        \n        <MovieSearch onSubmit={onSearch} />\n        {query && !movies.length && <NoDataMsg message = {`Sorry, there is no movie titled ${query}`}/>}\n        {movies.length !== 0 && <MovieList movies = {movies}/>}\n\n        <Outlet/>\n        {page < totalPages && <div className=\"guard\"/>}\n        </>\n    );\n};\n","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '8cb2067df7427c657a5f093d2a8e51ae';\nexport const baseImgUrl = 'https://image.tmdb.org/t/p/w500/';\n\n\nexport const getMovies = ({requestType = 'trending', query = '', page = 1}) => {\n    let path = '';\n    switch (requestType) {\n        case 'trending':\n            path = 'trending/movie/day';\n            return axios.get(`${BASE_URL}/${path}?api_key=${API_KEY}&page=${page}`);\n        case 'search': \n            path = '/search/movie';\n            return axios.get(`${BASE_URL}/${path}?api_key=${API_KEY}&query=${query}&page=${page}`);\n        default:\n            break;\n    }\n   \n}\n\nexport const getMovieById = id => {\n    const path = `/movie/${id}`;\n    return  axios.get(`${BASE_URL}/${path}?api_key=${API_KEY}`);\n}\n\nexport const getMovieDetails = ({type, id}) => {\n    let path = '';\n    switch (type) {\n        case 'cast':\n           path = `/movie/${id}/credits`;\n           break;\n        case 'reviews':\n            path = `movie/${id}/reviews`;\n            break;\n        default:\n            throw new Error('Invalid details type meaning in get movie details'); \n    }\n    \n    return axios.get(`${BASE_URL}/${path}?api_key=${API_KEY}`);\n}\n"],"names":["Movies","styled","MovieList","movies","location","useLocation","map","id","title","release_date","overview","posterUrl","poster_path","year","Date","getFullYear","imgUrl","baseImgUrl","className","size","to","state","from","src","alt","Msg","margin","NoDataMsg","message","SearchForm","MovieSearch","onSubmit","useSearchParams","get","useState","query","setQuery","name","type","value","onChange","e","target","setMovies","page","setPage","totalPages","setTotalPages","searchParams","setSearchParams","useEffect","observer","IntersectionObserver","root","rootMargin","treshhold","guard","document","querySelector","observe","getTotalPages","getMovies","data","total_pages","pages","findMovies","requestType","results","newMovies","preventDefault","queryStr","elements","search","toLowerCase","trim","length","BASE_URL","API_KEY","path","axios","getMovieById","getMovieDetails","Error"],"sourceRoot":""}
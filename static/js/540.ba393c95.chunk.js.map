{"version":3,"file":"static/js/540.ba393c95.chunk.js","mappings":"kRAEaA,E,QAAcC,EAAAA,GAAH,4K,SCIlBC,EAAa,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,QACzB,OACI,iCACA,wBAAG,oCAAYD,QACf,uBAAIC,MAGX,EAEc,SAASC,IACpB,IAAOC,GAAMC,EAAAA,EAAAA,MAAND,GACP,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAU,mCAAG,qGACgBC,EAAAA,EAAAA,IAAgB,CAACC,KAAM,UAAWR,GAAAA,IADlD,8BACyDS,KAAKC,QAD9D,OACTC,EADS,OAEfP,EAAWO,GAFI,2CAAH,qDAIhBL,GACH,GAAE,CAACN,KAEJY,EAAAA,EAAAA,kBAAgB,YACZC,EAAAA,EAAAA,GAAgBV,EACjB,GAAC,CAACA,KAGL,8BACMA,EAAQW,QACT,SAACpB,EAAD,CAAaM,GAAG,UAAhB,SACIG,EAAQY,KAAI,YAA4B,IAA1BlB,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,QAASE,EAAQ,EAARA,GAAU,OAAQ,yBAAe,SAACJ,EAAD,CAAYC,OAAQA,EAAQC,QAASA,KAAzCE,EAA0D,OAFvG,cAAGgB,MAAO,CAACC,QAAS,cAApB,uDAM3B,C,uDCvCM,IAAMJ,EAAkB,SAACK,GAC5B,IAAMC,EAAeC,SAASC,cAAc,kBAAkBC,wBAAwBC,IAC/EL,GACDM,OAAOC,SAAS,CACdF,IAAKJ,EACLO,SAAU,UAGrB,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js","utils/scrollToDetails.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const ReviewsList = styled.ul`\n    list-style: disc;\n    padding: 40px 100px 40px 120px;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    line-height: 1.5;\n`","import { useLayoutEffect, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieDetails } from \"utils/fetch-movies\";\nimport { scrollToDetails } from \"utils/scrollToDetails\";\nimport { ReviewsList } from \"./Reviews.styled\";\n\nconst ReviewItem = ({author, content}) => {\n    return (\n        <>\n        <p><b>Author: {author}</b></p>\n        <p>{content}</p>\n        </>\n    )\n} \n\nexport default function Reviews () {\n    const {id} = useParams(); \n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        const getReviews = async() => {\n            const reviewList = await(await(getMovieDetails({type: 'reviews', id}))).data.results;\n            setReviews(reviewList);\n        }\n        getReviews();\n    }, [id]);\n\n    useLayoutEffect(() => {  \n        scrollToDetails(reviews); \n      },[reviews]);\n    \n    return (\n    <>        \n        {!reviews.length ? (<p style={{padding: '40px 100px'}}>We don't have any reviews for this movie</p>) :\n        (<ReviewsList id='reviews'>            \n            {reviews.map(({author, content, id}) => { return (<li key = {id}><ReviewItem author={author} content={content}/></li>)})}\n        </ReviewsList>)}\n    </>\n    )\n}","export const scrollToDetails = (detailType) => {\n    const detailsStart = document.querySelector('.details-title').getBoundingClientRect().top;\n        if(detailType ) {\n          window.scrollBy({\n            top: detailsStart,\n            behavior: 'smooth',\n          });\n        } \n}"],"names":["ReviewsList","styled","ReviewItem","author","content","Reviews","id","useParams","useState","reviews","setReviews","useEffect","getReviews","getMovieDetails","type","data","results","reviewList","useLayoutEffect","scrollToDetails","length","map","style","padding","detailType","detailsStart","document","querySelector","getBoundingClientRect","top","window","scrollBy","behavior"],"sourceRoot":""}